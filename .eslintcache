[{"/Volumes/MacSource/Work/MyProject/CurrentProject/Upwork/ChrisClient/lmtrends/src/index.js":"1","/Volumes/MacSource/Work/MyProject/CurrentProject/Upwork/ChrisClient/lmtrends/src/App.js":"2","/Volumes/MacSource/Work/MyProject/CurrentProject/Upwork/ChrisClient/lmtrends/src/reportWebVitals.js":"3","/Volumes/MacSource/Work/MyProject/CurrentProject/Upwork/ChrisClient/lmtrends/src/contexts/loading.js":"4","/Volumes/MacSource/Work/MyProject/CurrentProject/Upwork/ChrisClient/lmtrends/src/components/Main/index.js":"5","/Volumes/MacSource/Work/MyProject/CurrentProject/Upwork/ChrisClient/lmtrends/src/components/Loader/index.js":"6","/Volumes/MacSource/Work/MyProject/CurrentProject/Upwork/ChrisClient/lmtrends/src/components/CSVReader/index.js":"7","/Volumes/MacSource/Work/MyProject/CurrentProject/Upwork/ChrisClient/lmtrends/src/components/Stats/index.js":"8","/Volumes/MacSource/Work/MyProject/CurrentProject/Upwork/ChrisClient/lmtrends/src/components/Result/index.js":"9","/Volumes/MacSource/Work/MyProject/CurrentProject/Upwork/ChrisClient/lmtrends/src/components/Tags/index.js":"10"},{"size":552,"mtime":1611186591000,"results":"11","hashOfConfig":"12"},{"size":217,"mtime":1611186601000,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1611167574000,"results":"14","hashOfConfig":"12"},{"size":540,"mtime":1611167574000,"results":"15","hashOfConfig":"12"},{"size":5903,"mtime":1611186423000,"results":"16","hashOfConfig":"12"},{"size":262,"mtime":1611167574000,"results":"17","hashOfConfig":"12"},{"size":3203,"mtime":1611167574000,"results":"18","hashOfConfig":"12"},{"size":1291,"mtime":1611167574000,"results":"19","hashOfConfig":"12"},{"size":3204,"mtime":1611167574000,"results":"20","hashOfConfig":"12"},{"size":4218,"mtime":1611167574000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"o9tinu",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Volumes/MacSource/Work/MyProject/CurrentProject/Upwork/ChrisClient/lmtrends/src/index.js",[],["44","45"],"/Volumes/MacSource/Work/MyProject/CurrentProject/Upwork/ChrisClient/lmtrends/src/App.js",[],"/Volumes/MacSource/Work/MyProject/CurrentProject/Upwork/ChrisClient/lmtrends/src/reportWebVitals.js",[],"/Volumes/MacSource/Work/MyProject/CurrentProject/Upwork/ChrisClient/lmtrends/src/contexts/loading.js",[],"/Volumes/MacSource/Work/MyProject/CurrentProject/Upwork/ChrisClient/lmtrends/src/components/Main/index.js",["46"],"import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from '@material-ui/lab/Alert';\nimport TextField from '@material-ui/core/TextField';\nimport DateRangePicker from '@material-ui/lab/DateRangePicker';\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\nimport LocalizationProvider from '@material-ui/lab/LocalizationProvider';\nimport Box from '@material-ui/core/Box';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport moment from 'moment';\nimport CSVReader from '../CSVReader/index';\nimport Loader from '../Loader/index';\nimport Stats from '../Stats/index';\nimport Result from '../Result';\nimport Tags from '../Tags';\nimport { LoadingContext } from '../../contexts/loading';\n\nconst time = [\n  {\n    value: 'All Time',\n    id: 0,\n  },\n  {\n    value: '90 days',\n    id: 1,\n  },\n  {\n    value: '60 days',\n    id: 2,\n  },\n  {\n    value: '30 days',\n    id: 3,\n  },\n  {\n    value: '14 days',\n    id: 4,\n  },\n  {\n    value: 'Custom date range',\n    id: 5,\n  },\n];\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(6),\n  },\n  title: {\n    marginTop: 0,\n    fontSize: '2.5rem',\n    fontFamily: 'proxima-nova,Roboto,\"Helvetica Neue\",Arial,sans-serif',\n    fontWeight: 300,\n  },\n  date: {\n    marginTop: 0,\n    fontSize: '1rem',\n    fontFamily: 'proxima-nova,Roboto,\"Helvetica Neue\",Arial,sans-serif',\n  },\n  alert: {\n    margin: theme.spacing(0, 0, 6),\n  },\n}));\n\nexport default function Main() {\n  const classes = useStyles();\n  const { loading } = useContext(LoadingContext);\n\n  const [csvReaderError, setCSVReaderError] = useState({\n    error: false,\n    msg: '',\n  })\n\n  const [date, setDate] = useState({\n    startDate: '',\n    dueDate: ''\n  })\n\n  const [result, setResult] = useState({\n    total: 0,\n    totalCount: 0,\n    data: [],\n  })\n\n  const [showTime, selectShowTime] = useState('All Time');\n\n  const handleData = (data, total, startDate, dueDate) => {\n    setResult({\n      total,\n      totalCount: total,\n      data,\n      newData: data,\n    });\n    setDate({\n      startDate,\n      dueDate\n    })\n  }\n\n  const handleError = (error, msg) => {\n    setCSVReaderError({\n      error,\n      msg\n    })\n  }\n\n  const handleChange = (event) => {\n    let count = 0;\n    switch (event.target.value) {\n      case 'All Time':\n        count = 0;\n        break;\n      case '90 days':\n        count = 90;\n        break;\n      case '60 days':\n        count = 60;\n        break;\n      case '30 days':\n        count = 30;\n        break;\n      case '14 days':\n        count = 14;\n        break;\n      case 'Custom date range':\n        count = 0;\n        break;\n      default:\n        break;\n    }\n    if(count === 0) {\n      const totalCount = result.total;\n      const newData = result.data;\n      setResult((prev) =>({\n        ...prev,\n        totalCount,\n        newData\n      }))\n      selectShowTime(event.target.value);\n    }\n    else {\n      let today = new Date()\n      let priorDate = new Date().setDate(today.getDate()-count);\n      priorDate = new Date(priorDate)\n      let newData = result.data.filter(({data}) => {\n        var dateObject = new Date(data['Date']);\n        var compare = dateObject.getTime() >= priorDate.getTime();\n        if(!compare) {\n          return false;\n        }\n        return true;\n      }).map(function(tag) {\n        return tag;\n      });\n      const totalCount = newData.length;\n      setResult((prev) =>({\n        ...prev,\n        totalCount,\n        newData\n      }))\n      selectShowTime(event.target.value);\n    }\n  };\n\n  const { error, msg } = csvReaderError;\n  const { data, totalCount, newData } = result;\n  const { startDate, dueDate } = date;\n  const [value, setValue] = useState([null, null]);\n  console.log('first value', value[0], 'second value', value[1]);\n  return (\n    <div className={classes.root}>\n      {\n        loading &&\n        <Loader />\n      }\n      {\n        error &&\n        <Alert className={classes.alert} severity=\"error\">{msg}</Alert>\n      }\n      <Grid container spacing={3} justify=\"space-between\">\n        <Grid item>\n          <Typography variant=\"h1\" className={classes.title}>\n            LM Trends\n          </Typography>\n          {\n            startDate &&\n            <Typography variant=\"h6\" className={classes.date}>\n              {startDate} to {dueDate}\n            </Typography>\n          }\n        </Grid>\n        <Grid item>\n          <CSVReader\n            handleData = {handleData}\n            handleError = {handleError}\n          />\n        </Grid>\n      </Grid>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DateRangePicker\n          startText=\"Check-in\"\n          endText=\"Check-out\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(startProps, endProps) => (\n            <React.Fragment>\n              <TextField {...startProps} variant=\"standard\" />\n              <Box sx={{ mx: 2 }}> to </Box>\n              <TextField {...endProps} variant=\"standard\" />\n            </React.Fragment>\n          )}\n        />\n      </LocalizationProvider>\n      <TextField\n        id=\"time-currency\"\n        select\n        value={showTime}\n        onChange={handleChange}\n        disabled={result.total === 0}\n      >\n        {time.map((time) => (\n          <MenuItem key={time.value} value={time.value}>\n            {time.value}\n          </MenuItem>\n        ))}\n      </TextField>\n      <Stats\n        total = {totalCount}\n      />\n      {\n        !!data.length &&\n        <>\n          <Result\n            data = {newData}\n            total = {totalCount}\n          />\n          <Tags\n            data = {newData}\n            total = {totalCount}\n          />\n        </>\n      }\n    </div>\n  );\n}","/Volumes/MacSource/Work/MyProject/CurrentProject/Upwork/ChrisClient/lmtrends/src/components/Loader/index.js",[],"/Volumes/MacSource/Work/MyProject/CurrentProject/Upwork/ChrisClient/lmtrends/src/components/CSVReader/index.js",[],"/Volumes/MacSource/Work/MyProject/CurrentProject/Upwork/ChrisClient/lmtrends/src/components/Stats/index.js",[],"/Volumes/MacSource/Work/MyProject/CurrentProject/Upwork/ChrisClient/lmtrends/src/components/Result/index.js",[],"/Volumes/MacSource/Work/MyProject/CurrentProject/Upwork/ChrisClient/lmtrends/src/components/Tags/index.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":12,"column":8,"nodeType":"53","messageId":"54","endLine":12,"endColumn":14},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]